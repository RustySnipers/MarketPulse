name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install TA-Lib dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
        sudo apt-get install -y python3-dev
        sudo apt-get install -y gfortran
        sudo apt-get install -y libatlas-base-dev
        sudo apt-get install -y wget
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib
        ./configure --prefix=/usr
        make
        sudo make install
        cd ..

    - name: Install Python dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install ta-lib
        pip install -r requirements.txt

    - name: Install PyInstaller
      run: |
        source venv/bin/activate
        pip install pyinstaller

    - name: Build Executable with PyInstaller
      run: |
        source venv/bin/activate
        pyinstaller --onefile main.py

    - name: Install xvfb
      run: |
        sudo apt-get install -y xvfb

    - name: Test Executable
      run: |
        sudo xvfb-run --auto-servernum ./dist/main  # On Windows, use `dist\main.exe`

    - name: Upload Release Asset
      uses: actions/upload-artifact@v2
      with:
        name: main-executable
        path: dist/main  # On Windows, use `dist\main.exe`

    - name: Set up for release
      run: |
        sudo apt-get install -y zip
        zip -r release.zip dist/main  # Adjust this if you need to package other files as well

    - name: Upload Release Zip
      uses: actions/upload-artifact@v2
      with:
        name: release-zip
        path: release.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0  # Adjust this as needed
        release_name: Release v1.0.0
        draft: false
        prerelease: false

    - name: Upload Release Asset to GitHub
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release.zip
        asset_name: release.zip
        asset_content_type: application/zip
