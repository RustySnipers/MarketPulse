name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install TA-Lib dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
        sudo apt-get install -y python3-dev
        sudo apt-get install -y gfortran
        sudo apt-get install -y libatlas-base-dev
        sudo apt-get install -y wget
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib
        ./configure --prefix=/usr
        make
        sudo make install
        cd ..

    - name: Install Python dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install ta-lib
        pip install -r requirements.txt

    - name: Install PyInstaller
      run: |
        source venv/bin/activate
        pip install pyinstaller

    - name: Build Executable with PyInstaller
      run: |
        source venv/bin/activate
        pyinstaller --onefile main.py

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/main  # On Windows, use `./dist/main.exe`
        asset_name: main  # On Windows, use `main.exe`
        asset_content_type: application/octet-stream
